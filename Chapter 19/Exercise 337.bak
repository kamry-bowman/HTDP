;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-lambda-reader.ss" "lang")((modname |Exercise 337|) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
(require 2htdp/abstraction)

(define-struct dir [name dirs files])

; A Dir.v3 is a structure
; (make-dir String Dir* File*)

; A Dir* is one of:
; - '()
; - (cons Dir.v3 Dir*)

; A File* is one of:
; - '()
; - (cons File.v3 File*)

; A File.v3 is a structure:
; (make-file String Number String)
(define-struct file [name size content])

(define Text
  (make-dir "Text"
            '()
            `(,(make-file "part1" 99 "")
              ,(make-file "part2" 52 "")
              ,(make-file "part3" 17 ""))))

(define Libs
  (make-dir "Libs"
            `(,(make-dir "Code"
                         '()
                         `(,(make-file "hang" 8 "")
                           ,(make-file "draw" 2 "")))
              ,(make-dir "Docs"
                         '()
                         `(,(make-file "read!" 19 ""))))
            '()))
(define TS
  (make-dir "TS"
            `(,Libs ,Text)
            `(,(make-file "read!" 10 ""))))

; Dir.v2 -> Number
; Determines number of File.v1 within Dir.v2 nested structure
(check-expect (how-many Text) 3)
(check-expect (how-many Libs) 3)
(check-expect (how-many TS) 7)
(define (how-many d)
  (match d
    [(dir name dirs files)
     (foldr (lambda (sub-d accum)
              (+
               accum
               (how-many sub-d)))
            (length files)
            dirs)]))
            
